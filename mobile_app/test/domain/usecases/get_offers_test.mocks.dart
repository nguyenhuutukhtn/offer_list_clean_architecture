// Mocks generated by Mockito 5.4.4 from annotations
// in mobile_app/test/domain/usecases/get_offers_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mobile_app/core/error/failures.dart' as _i5;
import 'package:mobile_app/domain/entities/offer.dart' as _i6;
import 'package:mobile_app/domain/repositories/offer_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [OfferRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockOfferRepository extends _i1.Mock implements _i3.OfferRepository {
  MockOfferRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Offer>>> getOffers() =>
      (super.noSuchMethod(
        Invocation.method(
          #getOffers,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<_i6.Offer>>>.value(
            _FakeEither_0<_i5.Failure, List<_i6.Offer>>(
          this,
          Invocation.method(
            #getOffers,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Offer>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Offer>> createOffer(
          _i6.Offer? offer) =>
      (super.noSuchMethod(
        Invocation.method(
          #createOffer,
          [offer],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Offer>>.value(
            _FakeEither_0<_i5.Failure, _i6.Offer>(
          this,
          Invocation.method(
            #createOffer,
            [offer],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Offer>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Offer>> updateOffer(
          _i6.Offer? offer) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateOffer,
          [offer],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Offer>>.value(
            _FakeEither_0<_i5.Failure, _i6.Offer>(
          this,
          Invocation.method(
            #updateOffer,
            [offer],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Offer>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteOffer(String? offerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteOffer,
          [offerId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteOffer,
            [offerId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> purchaseOffer(
    _i6.Offer? offer,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #purchaseOffer,
          [
            offer,
            userId,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #purchaseOffer,
            [
              offer,
              userId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);
}
